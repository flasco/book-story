# generated by patch-package 6.4.8 on 2022-04-03 17:49:52
#
# command:
#   npx patch-package antd-mobile
#
# declared package:
#   antd-mobile: 5.9.5
#
diff --git a/node_modules/antd-mobile/2x/es/components/toast/methods.js b/node_modules/antd-mobile/2x/es/components/toast/methods.js
index bed0fa1..654be84 100644
--- a/node_modules/antd-mobile/2x/es/components/toast/methods.js
+++ b/node_modules/antd-mobile/2x/es/components/toast/methods.js
@@ -1,16 +1,12 @@
 import React, { createRef, forwardRef, useEffect, useImperativeHandle, useState } from 'react';
 import { resolveContainer } from '../../utils/get-container';
-import ReactDOM from 'react-dom';
+import { createRoot } from 'react-dom/client';
 import { InternalToast } from './toast';
 import { mergeProps } from '../../utils/with-default-props';
 const containers = [];
 
-function unmount(container) {
-  const unmountResult = ReactDOM.unmountComponentAtNode(container);
-
-  if (unmountResult && container.parentNode) {
-    container.parentNode.removeChild(container);
-  }
+function unmount(root) {
+  root.unmount();
 }
 
 const defaultProps = {
@@ -30,7 +26,8 @@ export function show(p) {
   const bodyContainer = resolveContainer(getContainer);
   bodyContainer.appendChild(container);
   clear();
-  containers.push(container);
+  const root = createRoot(container);
+  containers.push(root);
   const TempToast = forwardRef((_, ref) => {
     const [visible, setVisible] = useState(true);
     useEffect(() => {
@@ -64,9 +61,9 @@ export function show(p) {
     }));
   });
   const ref = createRef();
-  ReactDOM.render(React.createElement(TempToast, {
+  root.render(React.createElement(TempToast, {
     ref: ref
-  }), container);
+  }));
   return {
     close: () => {
       var _a;
diff --git a/node_modules/antd-mobile/2x/es/utils/render-to-body.js b/node_modules/antd-mobile/2x/es/utils/render-to-body.js
index a96ba22..d19cebd 100644
--- a/node_modules/antd-mobile/2x/es/utils/render-to-body.js
+++ b/node_modules/antd-mobile/2x/es/utils/render-to-body.js
@@ -1,16 +1,14 @@
-import ReactDOM from 'react-dom';
+import { createRoot } from 'react-dom/client';
 export function renderToBody(element) {
   const container = document.createElement('div');
   document.body.appendChild(container);
 
-  function unmount() {
-    const unmountResult = ReactDOM.unmountComponentAtNode(container);
+  const root = createRoot(container);
 
-    if (unmountResult && container.parentNode) {
-      container.parentNode.removeChild(container);
-    }
+  function unmount() {
+    root.unmount();
   }
 
-  ReactDOM.render(element, container);
+  root.render(element);
   return unmount;
 }
\ No newline at end of file
diff --git a/node_modules/antd-mobile/es/components/toast/methods.js b/node_modules/antd-mobile/es/components/toast/methods.js
index bed0fa1..654be84 100644
--- a/node_modules/antd-mobile/es/components/toast/methods.js
+++ b/node_modules/antd-mobile/es/components/toast/methods.js
@@ -1,16 +1,12 @@
 import React, { createRef, forwardRef, useEffect, useImperativeHandle, useState } from 'react';
 import { resolveContainer } from '../../utils/get-container';
-import ReactDOM from 'react-dom';
+import { createRoot } from 'react-dom/client';
 import { InternalToast } from './toast';
 import { mergeProps } from '../../utils/with-default-props';
 const containers = [];
 
-function unmount(container) {
-  const unmountResult = ReactDOM.unmountComponentAtNode(container);
-
-  if (unmountResult && container.parentNode) {
-    container.parentNode.removeChild(container);
-  }
+function unmount(root) {
+  root.unmount();
 }
 
 const defaultProps = {
@@ -30,7 +26,8 @@ export function show(p) {
   const bodyContainer = resolveContainer(getContainer);
   bodyContainer.appendChild(container);
   clear();
-  containers.push(container);
+  const root = createRoot(container);
+  containers.push(root);
   const TempToast = forwardRef((_, ref) => {
     const [visible, setVisible] = useState(true);
     useEffect(() => {
@@ -64,9 +61,9 @@ export function show(p) {
     }));
   });
   const ref = createRef();
-  ReactDOM.render(React.createElement(TempToast, {
+  root.render(React.createElement(TempToast, {
     ref: ref
-  }), container);
+  }));
   return {
     close: () => {
       var _a;
diff --git a/node_modules/antd-mobile/es/utils/render-to-body.js b/node_modules/antd-mobile/es/utils/render-to-body.js
index a96ba22..d19cebd 100644
--- a/node_modules/antd-mobile/es/utils/render-to-body.js
+++ b/node_modules/antd-mobile/es/utils/render-to-body.js
@@ -1,16 +1,14 @@
-import ReactDOM from 'react-dom';
+import { createRoot } from 'react-dom/client';
 export function renderToBody(element) {
   const container = document.createElement('div');
   document.body.appendChild(container);
 
-  function unmount() {
-    const unmountResult = ReactDOM.unmountComponentAtNode(container);
+  const root = createRoot(container);
 
-    if (unmountResult && container.parentNode) {
-      container.parentNode.removeChild(container);
-    }
+  function unmount() {
+    root.unmount();
   }
 
-  ReactDOM.render(element, container);
+  root.render(element);
   return unmount;
 }
\ No newline at end of file
